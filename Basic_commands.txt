Basic Commands of git:

1. Configuring Git: 
 - git config --global user.name "My name"
 - git config --global user.email "someone@tmail.com"
 - git config --list

-----------------------------------------------------------------------

2. Clone & Status:
 - Clone : cloning (copy) a repo on our local machine
      git clone <-some link->

 - Status : displays the state of the code 
      git status
      
      - untracked : new files that git doesn't yet track
      - modified  : changed
      - staged    : file is ready to be committed
      - unmodified: unchanged

-----------------------------------------------------------------------

3. Add & commit
 - add : addds new or changed files in your working directory to the git staging area
     git add <-file_name-> : for adding one file
     git add . : for adding all files

 - rm : remove files in your working directory to the git staging area

 - commit : it is the record of change
     git commit -m "some mssg"

-----------------------------------------------------------------------

4. Push :
 - push : send your changes to a remote repo
     git push origin main 

-----------------------------------------------------------------------

5. Init : 
 - init : used to create a new git repo
     
     git init
     git remote add origin <-link->
     git remote -v (to verify remote)
     git branch    (to check branch)
     git branch -M main (to rename branch to 'main')
     git push origin main
     git push -u origin main (if we use -u, it means pushing upstream, that means we 
                                    won't need to write origin main in every future time, we just need 
                                    to write "git push" and work done.)

-----------------------------------------------------------------------

6. Branch Commands
    - git branch : to check branch
    - git branch -M main : to rename branch
    - git checkout <-branch name-> : to navigate
    - git checkout -b <-branch name-> : to create a new branch and switch to it
    - git branch -d <-branch name-> : to delete branch

-----------------------------------------------------------------------
 
7. Merging code (Pull Requests)

    way_1 : 
    git diff <-branch_name->  : to compare commits, branches, files and more
    git merge <-branch_name->  : to merge code from another branch into current branch

    way_2 :
    Create a PR (Pull Request)
        - It lets you tell others about changes you have pushed to a branch in a repo on github.

-----------------------------------------------------------------------

8. Pull Command : 

    git pull origin main :
        used to fetch and download content from a remote repo and immediately update the local 
        repo to match the content.

-----------------------------------------------------------------------

9. Resolving Merge Conflicts :

    An event that takes place when Git is unable to automatically resolve differences in code between two commits.

-----------------------------------------------------------------------

10. Undoing Changes : 

    Case 1 : staged changes  (for those are added but not commited)
        git reset <-file_name->
        git reset 
    
    Case 2 : commited changes (for one commit)
        git reset HEAD~1

    Case 3 : commited changes (for many commits)
        git reset <-commit hash->
        git reset --hard <-commit hash->

-----------------------------------------------------------------------

11. fork :

    A fork is a new repository that shared code and visibility settings with original "upstream" repository.

    Fork is a rough copy.
    

